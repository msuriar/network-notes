BGP PATH ATTRIBUTES

Every BGP UPDATE message containing NLRI information must also contain path attribute information, describing the path through which this NLRI update has passed.

Attributes fall in to two categories, each of which has two sub categories.

Well-known attributes: these are attributes that MUST be supported by all BGP implementations. Well-known attributes are further divided in to mandatory and discretionary attributes:
* Mandatory attributes MUST be included in every UPDATE message that contains NLRI.
* Discretionary attributes MAY or MAY NOT be included in a given UPDATE.

Optional attributes: these attributes do not need to be supported by all BGP implementations. The processing of an unrecognised optional attribute is determined by the state of the 'Transitive' bit in the attribute flags.

Paths with unknown optional transitive attributes SHOULD be accepted; if they are accepted and passed on to other peers, any unknown optional transitive attributes MUST be passed in the update, with the 'Partial' bit in the new update set to 1. If an optional transitive attribute is recognised, and the incoming update has the 'Partial' flag set to 1, it MUST NOT be set back to 0 when it is readvertised to other peers.

Unrecognised non-transitive attributes MUST be silently dropped and not sent on to other peers.

Path attributes SHOULD be ordered within the update message in ascending order of attribute type.

A given attribute MUST NOT appear more than once in any one UPDATE message.

ORIGIN - Well known, mandatory
Value should be generated by the speaker that originates the associated NLRI information. This value SHOULD NOT be changed by other speakers.

AS_PATH - Well known, mandatory
Identifies the list of ASes through which a routing update has passed. The list may be composed of both AS_SETs and AS_SEQUENCEs.

When a BGP speaker propagates a route it has learned from another BGP speaker's UPDATE, it modifies the route's AS_PATH attribute based on the type of neighbour to which it is propagating the information:
* IBGP peers: the sender SHALL NOT modify the AS_PATH attribute.
* EBGP peers:
 => if the first path segment of the AS_PATH attribute is an AS_SEQUENCE, the sending speaker should pre-pend its own AS number to this first AS_SEQUENCE. If doing so will cause an overflow of the AS_SEQUENCE element, a new AS_SEQUENCE element consisting solely of the sending speaker's AS SHOULD be added in the first position of the AS_PATH list.
 => if the first path segment of the AS_PATH attribute is an AS_SET, the sending speaker should pre-pend a new AS_SEQUENCE list element containing its own AS.
 => if the AS_PATH attribute is empty, the sending speaker should create a path segment of type AS_SEQUENCE, with its own AS in that segment, and place that segment into the AS_PATH.

When a BGP speaker originates a route:
 => The originating speaker includes its own AS number in a path segment of type AS_SEQUENCE when sending to an external peer.
 => The originating spekaer includes an empty AS_PATH attribute when sending UPDATEs to IBGP peers.

When a sending speaker is required to prepend its own AS number to an outgoing UPDATE, it MAY prepend its own AS number more than once. This is controlled by local configuration, and is used to influence path selection in other autonomous systems.

NEXT_HOP - Well-known, mandatory
Contains the IP address that SHOULD be used to forward packets destined for the prefix(es) listed in the UPDATE.
1) When sending to an internal peer, the NEXT_HOP attribute should not be modified, unless the sending speaker has been explicitly configured to do so. When announcing a locally originated route to an internal peer, the interface address of the router through which the announced network is reaachable for the speaker SHOULD be used as the NEXT_HOP. If the route is directly connected to the speaker, the speaker SHOULD use its own IP address as the NEXT_HOP.

2) When sending a message to an external peer, X, and the peer is one IP hop away:
    - If the route being announced as learned from an internal peer or is locally originated, the sending speaker can use an interface address of the internal peer router (or the internal router) through which the announced network is reachable as the NEXT_HOP address; PROVIDED that X shares a common subnet with this address. (Think internet exchanges)
    - Otherwise, if the route being announced was learned from an external peer, the speaker can use an IP address of any adjacent router that the speaker itself uses for local route calculation, providing again that X shares a common subnet with this address.
    - Otherwise, if X shares a common subnet with the sending speaker, the sender MAY use this interface address as the NEXT_HOP value.
    - By default (if none of the above conditions are met), the sending speaker SHOULD use the IP address of the interface that the speaker uses to establish the BGP connection to peer X. (Note that this will break if we are NATting, unless the NAT appliance is BGP aware.)

A route originated by a BGP speaker SHALL NOT be advertised to a peer using an address of that peer as the NEXT_HOP. A BGP speaker SHALL NOT install a route in the RIB with itself as the NEXT_HOP.

MULTI_EXIT_DISCRIMINATOR - optional, non-transitive. Only intended for use on EBGP peers.
Where there are multiple entry points to a directly neighbouring AS, MED is used to influence which of these connections is used. All other factors being equal, the exit point with the lowest MED SHOULD be preferred. If received over EBGP, MED MAY be propagated to IBGP peers. MED MUST NOT be propagated across to another EBGP peer.

LOCAL_PREFERENCE - well-known attribute, required in all IBGP updates. The path to a destination with the highest LP MUST be preferred. LP MUST NOT be included in UPDATEs sent to EBGP peers.

ATOMIC_AGGREGATE - well-known, discrectionary.
When a BGP speaker originates an aggregate, the AS_PATH of the aggregated route normally includes an AS_SET formed from the set of ASes from the AS_PATHs of all the UPDATEs from which the aggregate was formed. ATOMIC_AGGREGATE indicates that there has been some loss of precision as part of the aggregation process, and that any further recipients of the UPDATE MUST NOT make it more specific.

AGGREGATOR - optional, transitive.
RID of the BGP speaker which performed the aggregation of this updated.
